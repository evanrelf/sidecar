cabal-version: 3.0

name:        sidekick
version:     0.0.0.0
-- synopsis:
-- description:
author:      Evan Relf <evan@evanrelf.com>
maintainer:  Evan Relf <evan@evanrelf.com>
homepage:    https://github.com/evanrelf/sidekick
license:     ISC
copyright:   2020 Evan Relf


--------------------------------------------------------------------------------
-- Common
--------------------------------------------------------------------------------


common common
  build-depends:
    , base
    , relude
    , unliftio
  mixins:
    , base hiding (Prelude)
    , relude (Relude as Prelude)
  default-language: Haskell2010
  default-extensions:
    , BlockArguments
    , DeriveAnyClass
    , DeriveFunctor
    , DeriveGeneric
    , DerivingStrategies
    , DerivingVia
    , GeneralizedNewtypeDeriving
    , InstanceSigs
    , LambdaCase
    , NamedFieldPuns
    , NumericUnderscores
    , OverloadedStrings
    , ScopedTypeVariables
    , TypeApplications
  ghc-options:
    -Wall
    -Wcompat
    -Werror=incomplete-record-updates
    -Werror=incomplete-uni-patterns
    -Werror=missing-fields
    -Werror=partial-fields
    -Widentities
    -Wmissing-home-modules
    -Wredundant-constraints
    -foptimal-applicative-do
    -fshow-warning-groups


common threaded-executable
  ghc-options:
    -threaded
    -rtsopts
    -with-rtsopts=-N


common optics-labels
  default-extensions:
    , DataKinds
    , DuplicateRecordFields
    , FlexibleInstances
    , MultiParamTypeClasses
    , OverloadedLabels
    , TypeFamilies
    , UndecidableInstances


common streamly-optimizations
  ghc-options:
    -O2
    -fdicts-strict
    -fmax-worker-args=16
    -fspec-constr-recursive=16


common splint
  build-depends: splint
  ghc-options: -fplugin=Splint


--------------------------------------------------------------------------------
-- sidekick
--------------------------------------------------------------------------------


library
  import:
    , common
    , optics-labels
    , splint
    , streamly-optimizations
  hs-source-dirs: sidekick
  build-depends:
    , brick
    , optics
    , optparse-applicative
    , sidekick-ghci
    , streamly
    , streamly-fsnotify
    , string-interpolate
    , vty
  exposed-modules:
    , Sidekick
    , Sidekick.FSNotify
    , Sidekick.Options
    , Sidekick.UI


executable sidekick
  import:
    , common
    , streamly-optimizations
    , threaded-executable
  build-depends: sidekick
  main-is: sidekick/Main.hs


test-suite test-sidekick
  import:
    , common
    , splint
    , threaded-executable
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test-sidekick
  build-depends:
    , hspec
    , sidekick


--------------------------------------------------------------------------------
-- sidekick-ghci
--------------------------------------------------------------------------------


library sidekick-ghci
  import:
    , common
    , optics-labels
    , splint
    , streamly-optimizations
  visibility: public
  hs-source-dirs: sidekick-ghci
  build-depends:
    , megaparsec
    , optics
    , random
    , streamly
    , string-interpolate
    , text
  exposed-modules:
    , Sidekick.Ghci
    , Sidekick.Ghci.Internal


test-suite test-sidekick-ghci
  import:
    , common
    , splint
    , streamly-optimizations
    , threaded-executable
  type: exitcode-stdio-1.0
  main-is: Main.hs
  hs-source-dirs: test-sidekick-ghci
  build-depends:
    , hspec
    , sidekick-ghci
    , string-interpolate


--------------------------------------------------------------------------------
-- fused-effects-pub-sub
--------------------------------------------------------------------------------


library fused-effects-pub-sub
  hs-source-dirs: fused-effects-pub-sub
  build-depends:
    , base
    , fused-effects
    , transformers
    , unagi-chan
  exposed-modules:
    , Control.Carrier.Pub.Unagi
    , Control.Carrier.Sub.Unagi
    , Control.Effect.Pub
    , Control.Effect.Sub
  default-language: Haskell2010
  ghc-options:
    -Wall
    -Wcompat
    -Werror=incomplete-record-updates
    -Werror=incomplete-uni-patterns
    -Werror=missing-fields
    -Werror=partial-fields
    -Widentities
    -Wmissing-home-modules
    -Wredundant-constraints
    -foptimal-applicative-do
    -fshow-warning-groups
